version: 0.2
phases:
  post_build:
    commands:
      - ROLE_ARN=arn:aws:iam::$PROD_ACCOUNT_ID:role/eks-codebuild-kubectl-role
      - OUTPUT_PROFILE=deployprod
      - echo "Assuming role $ROLE_ARN"
      - sts=$(aws sts assume-role --role-arn "$ROLE_ARN" --role-session-name "$OUTPUT_PROFILE" --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' --output text)
      - echo "Converting sts to array"
      - sts=($sts)
      - echo "AWS_ACCESS_KEY_ID is ${sts[0]}"
      - aws configure set aws_access_key_id ${sts[0]} --profile $OUTPUT_PROFILE
      - aws configure set aws_secret_access_key ${sts[1]} --profile $OUTPUT_PROFILE
      - aws configure set aws_session_token ${sts[2]} --profile $OUTPUT_PROFILE
      - echo "credentials stored in the profile named $OUTPUT_PROFILE"
      - aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER --verbose --profile deployprod
      - sed "s|imageName|$DOCKER_REG/$IMAGE_NAME:$IMAGE_TAG|g" deployment.yaml > my-deployment.yaml
      - cat my-deployment.yaml
      - kubectl apply -f my-deployment.yaml -n demo-app
      - while [ -z "$url" ]; do url=$(kubectl describe service demo-app -n demo-app | grep 'LoadBalancer Ingress:' | awk '{printf "http://%s",$3;}'); sleep 2; done
      - echo "$url"
      - echo "Prod Demo App launched!"

